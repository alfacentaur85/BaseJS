1) не делал ))

2)
if (!("a" in window)) {
    var a = 1;
}
alert(a);

//будет выведено undefined, т.к. переменна€ |a| во-первых не €вл€етс€ литералом, который указан в условии, а в во-вторых объ€влена вне контекста window

var b = function a(x) {
    x && a(--x);
};
alert(a);

//будет ошибка, т.к. функци€ не определена в глобальном контексте, а в контексте объ€вленной переменной в рамках функционального выражени€

function a(x) {
    return x * 2;
}
var a ;
alert(a);

//будет выведен текст функции, т.к. не важно в каком месте кода объ€влена переменна€ 'a' с ключевым словом var. «а счет 2-х проходности компил€тор еЄ поместит в стек выполнени€ со ссылкой на функцию

function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

//будет выведено 10, т.к. в контексте самой функции значение 3-ого параметра (индексаци€ массивов идет с 0) переопределено операцией arguments[2] = 10 

function a() {
    alert(this);
}
a.call(null);

//будет выведено название глобального объекта 'object window', который продолжит оставатьс€ контекстом функции и €вл€тьс€ по сути this, т.к. компил€тор не сможет изменить контекст методом call на несуществующий - null (так же как впрочем и на неопределенный - undefined) 