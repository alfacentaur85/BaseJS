1) Дан код
Почему код даёт именно такие результаты?

var a = 1, b = 1, c, d;
c = ++a; alert(c);           // 2 - Префиксная запись инкремента сначала изменяет значение переменной, потом её возвращает
d = b++; alert(d);           // 1 - Постфиксная запись инкремента сначала возвращает значение переменной, потом её изменяет
c = (2+ ++a); alert(c);      // 5 - К 2 прибавляется увеличенное на единицу значение a (т.е. 3), т.к. префиксная запись
d = (2+ b++); alert(d);      // 4 - К 2 прибавляется значение b (т.е. 2), затем значение b увеличивается на 1, т.к. постфиксная запись
alert(a);                    // 3 - a = 3, т.к. было инициализировано 1 и выше по коду прошло черед 2 инкремента
alert(b);                    // 3 - b = 3, т.к. было инициализировано 1 и выше по коду прошло черед 2 инкремента

2) Чему будет равен x в примере ниже?
var a = 2;
var x = 1 + (a *= 2);

x = 5 

https://jsfiddle.net/y3qch2wo/

3)Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
если a и b положительные, вывести их разность;
если а и b отрицательные, вывести их произведение;
если а и b разных знаков, вывести их сумму; ноль можно считать положительным числом.

https://jsfiddle.net/5v38ap14/

4) Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.

https://jsfiddle.net/2ao4yLgj/

5)  Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

https://jsfiddle.net/3bzdgLop/2/

6) . Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. 
В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и 
вернуть полученное значение (использовать switch).

https://jsfiddle.net/emnzprbf/

7) Сравнить null и 0. Попробуйте объяснить результат.

0 == null - false
Потому что null - это отсутствие какого-либо значения объекта и не имеющего ссылки на область в памяти,
А ноль это обычное числовое значение, имеющее адрес в памяти.

8) С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.

https://jsfiddle.net/a9tyvfwb/



